# Modellformulierung
t_min   = -5                                                                     # minimum t-value
t_max   = 5                                                                      # maximum t-value
t_res   = 1e3                                                                    # t-space resolution
t       = seq(t_min,t_max, len = t_res)                                          # t-space
n       = c(2,3,5,10,30)                                                         # degrees of freedom
# Visualisierung
library(latex2exp)
dev.new()
par(
family     = "sans",
pty        = "m",
bty        = "l",
lwd        = 1,
las        = 1,
mgp        = c(2,1,0),
xaxs       = "i",
yaxs       = "i",
font.main  = 1,
cex        = 1.1,
cex.main   = 1.1)
matplot(
t,
matrix(c(dt(t,n[1]),
dt(t,n[2]),
dt(t,n[3]),
dt(t,n[4]),
dt(t,n[5])),
ncol = 5),
type         = "l",
lty          = 1,
lwd          = 2,
col          = c("gray10", "gray20", "gray50", "gray70", "gray90"),
ylim         = c(0,.4),
xlim         = c(t_min,t_max),
ylab         = " ",
xlab         = "x",
main         = TeX("$\\t(x;n)$"))
legend(
2,
.4,
c("n = 2", "n = 3", "n = 5", "n = 10", "n = 30"),
lty         = 1,
lwd         = 2,
col         =   c("gray10", "gray20", "gray50", "gray70", "gray90"),
bty         = "n",
cex         = 1.1,
y.intersp   = 1.6)
dev.copy2pdf(
file   = file.path("./7_Abbildungen/alm_7_t_wdf.pdf"),
width  = 6,
height = 5)
# Modellformulierung
t_min   = -5                                                                     # minimum t-value
t_max   = 5                                                                      # maximum t-value
t_res   = 1e3                                                                    # t-space resolution
t       = seq(t_min,t_max, len = t_res)                                          # t-space
n       = c(2,3,5,10,30)                                                         # degrees of freedom
# Visualisierung
library(latex2exp)
dev.new()
par(
family     = "sans",
pty        = "m",
bty        = "l",
lwd        = 1,
las        = 1,
mgp        = c(2,1,0),
xaxs       = "i",
yaxs       = "i",
font.main  = 1,
cex        = 1.1,
cex.main   = 1.1)
matplot(
t,
matrix(c(dt(t,n[1]),
dt(t,n[2]),
dt(t,n[3]),
dt(t,n[4]),
dt(t,n[5])),
ncol = 5),
type         = "l",
lty          = 1,
lwd          = 2,
col          = c("gray10", "gray20", "gray50", "gray70", "gray90"),
ylim         = c(0,.4),
xlim         = c(t_min,t_max),
ylab         = " ",
xlab         = " ",
main         = TeX("$\\t(\cdot;n)$"))
# Modellformulierung
t_min   = -5                                                                     # minimum t-value
t_max   = 5                                                                      # maximum t-value
t_res   = 1e3                                                                    # t-space resolution
t       = seq(t_min,t_max, len = t_res)                                          # t-space
n       = c(2,3,5,10,30)                                                         # degrees of freedom
# Visualisierung
library(latex2exp)
dev.new()
par(
family     = "sans",
pty        = "m",
bty        = "l",
lwd        = 1,
las        = 1,
mgp        = c(2,1,0),
xaxs       = "i",
yaxs       = "i",
font.main  = 1,
cex        = 1.1,
cex.main   = 1.1)
matplot(
t,
matrix(c(dt(t,n[1]),
dt(t,n[2]),
dt(t,n[3]),
dt(t,n[4]),
dt(t,n[5])),
ncol = 5),
type         = "l",
lty          = 1,
lwd          = 2,
col          = c("gray10", "gray20", "gray50", "gray70", "gray90"),
ylim         = c(0,.4),
xlim         = c(t_min,t_max),
ylab         = " ",
xlab         = " ",
main         = TeX("$\\t(\\cdot;n)$"))
legend(
2,
.4,
c("n = 2", "n = 3", "n = 5", "n = 10", "n = 30"),
lty         = 1,
lwd         = 2,
col         =   c("gray10", "gray20", "gray50", "gray70", "gray90"),
bty         = "n",
cex         = 1.1,
y.intersp   = 1.6)
dev.copy2pdf(
file   = file.path("./7_Abbildungen/alm_7_t_wdf.pdf"),
width  = 6,
height = 5)
# Modellformulierung
options(warn=-1)                                                                 # warning off
t_min     = -5                                                                   # Minimum T-Wert
t_max     = 30                                                                   # Maximum T-Wert
t_res     = 1e3                                                                  # T-Wert Auflösung
t         = seq(t_min, t_max, len = t_res)                                       # T-Raum
delta     = c(0,5,15)                                                            # Nichtzentralitätsparameter
n         = c(5, 30)                                                             # Freiheitsgrade
p         = cbind(
matrix(dt(t, n[1], delta[1]),nrow=length(t)),
matrix(dt(t, n[2], delta[1]),nrow=length(t)),
matrix(dt(t, n[1], delta[2]),nrow=length(t)),
matrix(dt(t, n[2], delta[2]),nrow=length(t)),
matrix(dt(t, n[1], delta[3]),nrow=length(t)),
matrix(dt(t, n[2], delta[3]),nrow=length(t)))
# Visualisierung
dev.new()
library(latex2exp)
graphics.off()
par(
family      = "sans",
pty         = "m",
bty         = "l",
lwd         = 1,
las         = 1,
mgp         = c(2,1,0),
xaxs        = "i",
yaxs        = "i",
font.main   = 1,
cex         = 1,
cex.main    = 1.2)
matplot(
t,
p,
type        = "l",
lty         = c(1,2,1,2,1,2),
col         = c("gray10", "gray10", "gray50", "gray50", "gray70", "gray70"),
lwd         = 2,
xlab        = "T",
ylab        = "",
ylim        = c(0,.4),
main        = TeX("$t(\\cdot;\\delta,n)$"))
legend(
18,
.4,
c(TeX("$\\delta = 0 , n = 5$"),
TeX("$\\delta = 0 , n = 30$"),
TeX("$\\delta = 5 , n = 5$"),
TeX("$\\delta = 5 , n = 30$"),
TeX("$\\delta = 15, n = 5$"),
TeX("$\\delta = 15, n = 30$")),
lty         = c(1,2,1,2,1,2),
col         = c("gray10", "gray10", "gray50", "gray50", "gray70", "gray70"),
lwd         = 2,
bty         = "n",
seg.len     = 1.75)
dev.copy2pdf(
file        = file.path("./7_Abbildungen/alm_7_nichtzentrale_t_verteilung.pdf"),
width       = 7,
height      = 4.5)
# Modellformulierung
options(warn=-1)                                                                 # warning off
t_min     = -5                                                                   # Minimum T-Wert
t_max     = 30                                                                   # Maximum T-Wert
t_res     = 1e3                                                                  # T-Wert Auflösung
t         = seq(t_min, t_max, len = t_res)                                       # T-Raum
delta     = c(0,5,15)                                                            # Nichtzentralitätsparameter
n         = c(5, 30)                                                             # Freiheitsgrade
p         = cbind(
matrix(dt(t, n[1], delta[1]),nrow=length(t)),
matrix(dt(t, n[2], delta[1]),nrow=length(t)),
matrix(dt(t, n[1], delta[2]),nrow=length(t)),
matrix(dt(t, n[2], delta[2]),nrow=length(t)),
matrix(dt(t, n[1], delta[3]),nrow=length(t)),
matrix(dt(t, n[2], delta[3]),nrow=length(t)))
# Visualisierung
dev.new()
library(latex2exp)
graphics.off()
par(
family      = "sans",
pty         = "m",
bty         = "l",
lwd         = 1,
las         = 1,
mgp         = c(2,1,0),
xaxs        = "i",
yaxs        = "i",
font.main   = 1,
cex         = 1,
cex.main    = 1.2)
matplot(
t,
p,
type        = "l",
lty         = c(1,2,1,2,1,2),
col         = c("gray10", "gray10", "gray50", "gray50", "gray70", "gray70"),
lwd         = 2,
xlab        = "",
ylab        = "",
ylim        = c(0,.4),
main        = TeX("$t(\\cdot;\\delta,n)$"))
legend(
18,
.4,
c(TeX("$\\delta = 0 , n = 5$"),
TeX("$\\delta = 0 , n = 30$"),
TeX("$\\delta = 5 , n = 5$"),
TeX("$\\delta = 5 , n = 30$"),
TeX("$\\delta = 15, n = 5$"),
TeX("$\\delta = 15, n = 30$")),
lty         = c(1,2,1,2,1,2),
col         = c("gray10", "gray10", "gray50", "gray50", "gray70", "gray70"),
lwd         = 2,
bty         = "n",
seg.len     = 1.75)
dev.copy2pdf(
file        = file.path("./7_Abbildungen/alm_7_nichtzentrale_t_verteilung.pdf"),
width       = 7,
height      = 4.5)
